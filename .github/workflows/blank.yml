name: Deploy Windows Service

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: self-hosted  # Use self-hosted runner for admin rights

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Verify Deployment Package
        shell: powershell
        run: |
          $servicePath = "C:\Deploy\sample-package.exe"
          if (-Not (Test-Path $servicePath)) {
            Write-Host "ERROR: Deployment package not found at $servicePath"
            exit 1
          }

      - name: Check if Service Exists and Stop It
        shell: powershell
        run: |
          $serviceName = "SampleWindowsService"
          $service = Get-Service -Name $serviceName -ErrorAction SilentlyContinue
          if ($service) {
            Write-Host "Service exists. Stopping and removing it..."
            Stop-Service -Name $serviceName -Force
            Start-Sleep -Seconds 2
            & "C:\nssm\nssm.exe" remove $serviceName confirm
          }

      - name: Install Windows Service with NSSM
        shell: powershell
        run: |
          $nssm = "C:\nssm\nssm.exe"
          $serviceName = "SampleWindowsService"
          $servicePath = "C:\Deploy\sample-package.exe"

          # Install the service
          & $nssm install $serviceName $servicePath
          & $nssm set $serviceName Start SERVICE_AUTO_START

          # Set Logging for Debugging
          & $nssm set $serviceName AppStdout "C:\Deploy\service.log"
          & $nssm set $serviceName AppStderr "C:\Deploy\service-error.log"
          & $nssm set $serviceName AppRotateFiles 1

          # Start the service
          & $nssm start $serviceName

      - name: Verify Service Status
        shell: powershell
        run: |
          Start-Sleep -Seconds 5
          $service = Get-Service -Name "SampleWindowsService" -ErrorAction SilentlyContinue
          if (-Not $service) {
            Write-Host "ERROR: Service not found!"
            exit 1
          }
          if ($service.Status -ne "Running") {
            Write-Host "ERROR: Service failed to start!"
            Write-Host "Checking logs..."
            Get-Content "C:\Deploy\service-error.log"
            exit 1
          } else {
            Write-Host "Service is running successfully."
          }

      - name: Debugging Information (if failure)
        if: failure()
        shell: powershell
        run: |
          Write-Host "Fetching Windows Event Logs..."
          Get-WinEvent -LogName Application | Where-Object { $_.Message -match "SampleWindowsService" } | Select-Object -First 10
